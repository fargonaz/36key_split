/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "mouse.dtsi"
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/36.h"                                      // key-position labels
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

/* left-hand HRMs */
ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/* right-hand HRMs */
ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)


#define BASE  0
#define COLEMAK  1
#define LOWER  2
#define UPPER  3
#define FUNCTION  4 
#define META  5

/ {
    behaviors {
        td1: td_mo2_tg4 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&mo LOWER>, <&tog META>;
        };

        td2: td_to2_semi {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp SEMI>, <&to BASE>;
        };

        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        rpi_a: rpi_a {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <220>;
            require-prior-idle-ms = <500>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        func: func {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            quick-tap-ms = <180>;
            require-prior-idle-ms = <115>;
            hold-trigger-key-positions = <16 17 18 6 7 8 9 28 27 26>;
        };
    };
};

/ {
  combos {
     compatible = "zmk,combos";
     combo_lgui {
            timeout-ms = <100>;
            key-positions = <10 20>;
            bindings = <&kp LEFT_GUI>;
            layers = <1>;
     };
     combo_lalt {
            timeout-ms = <100>;
            key-positions = <11 21>;
            bindings = <&kp LALT>;
            layers = <1>;
     };
     combo_lctl {
            timeout-ms = <100>;
            key-positions = <12 22>;
            bindings = <&kp LCTRL>;
            layers = <1>;
     };
     combo_lshift {
            timeout-ms = <100>;
            key-positions = <13 23>;
            bindings = <&kp LSHFT>;
            layers = <1>;
     };
     combo_rshift {
            timeout-ms = <100>;
            key-positions = <16 26>;
            bindings = <&kp LSHFT>;
            layers = <1>;
     };
     combo_rctrl {
            timeout-ms = <100>;
            key-positions = <17 27>;
            bindings = <&kp LCTRL>;
            layers = <1>;
     };
     combo_ralt {
            timeout-ms = <100>;
            key-positions = <18 28>;
            bindings = <&kp LALT>; 
            layers = <1>;
     }; 
     combo_rgui {
            timeout-ms = <100>;
            key-positions = <19 29>;
            bindings = <&kp RGUI>; 
            layers = <1>;
  };
};
};

/ {
    keymap {
        compatible = "zmk,keymap";
        BASE {
            display-name = "Base";
            bindings = <
&kp Q           &kp W        &kp E        &kp R        &kp T &kp Y         &kp U        &kp I        &kp O        &kp P
&hml LEFT_GUI A &hml LALT S  &hml LCTRL D &hml LSHFT F &kp G &kp H         &hmr RSHFT J &hmr LCTRL K &hmr LALT L  &hmr RGUI SEMI
&kp Z           &kp X        &kp C        &kp V        &kp B &kp N         &kp M        &kp COMMA    &kp DOT      &kp SLASH
                             &kp BSPC     &lt 4 ESC    &td1  &lt UPPER SQT &kp ENTER    &kp SPACE
            >;
        };

        COLEMAK {
        display-name = "colemak";
        bindings = <
&mt ESC Q       &kp W       &kp F        &kp P        &kp D  &kp J  &kp L        &kp U        &kp Y       &td2
&hml LEFT_GUI A &hml LALT R &hml LCTRL S &hml LSHFT T &kp G  &kp H  &hmr RSHFT N &hmr LCTRL E &hmr LALT I &hmr RGUI O
&mt TAB Z       &kp X       &kp C        &kp V        &kp B  &kp K  &kp M        &kp COMMA    &kp DOT     &kp SLASH
                            &trans       &trans       &trans &trans &trans       &trans  
            >;
        };

        LOWER {
            display-name = "Lower";
            bindings = <
&kp EXCL    &kp AT    &kp HASH      &kp LBKT             &kp RBKT              &kp PLUS  &func F7 N7 &func F8 N8 &func F9 N9 &func F10 N0
&trans      &kp TILDE &kp DQT       &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp MINUS &func F4 N4 &func F5 N5 &func F6 N6 &kp UNDER
&to COLEMAK &kp CAPS    &kp LC(LS(C)) &kp LC(LS(V))        &kp BSLH              &kp EQUAL &func F7 N1 &func F2 N2 &func F3 N3 &kp TILDE
                      &trans        &trans               &trans                &trans    &trans      &trans
            >;
        };

        UPPER {
            display-name = "Upper";
            bindings = <
&bt BT_SEL 0 &bt BT_NXT     &trans &trans  &trans &msc SCRL_UP   &mkp LCLK       &mmv MOVE_UP   &mkp RCLK       &trans
&bt BT_SEL 1 &bt BT_PRV     &trans &trans  &trans &msc SCRL_DOWN &mmv MOVE_LEFT  &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans
&bt BT_CLR   &bt BT_CLR_ALL &trans &trans  &trans &msc SCRL_LEFT &msc SCRL_RIGHT &trans         &trans          &trans
                            &trans &trans &trans  &trans         &trans          &trans
            >;
        }; 

        FUNCTION {
            display-name = "Function";
            bindings = <
&kp TAB        &trans      &kp END &trans  &trans  &trans    &trans    &kp INS  &trans    &kp PG_UP
&kp ESC        &trans      &kp DEL &trans  &trans  &kp HOME  &kp LEFT  &kp UP   &kp DOWN  &kp RIGHT
&studio_unlock &bootloader &trans  &trans  &trans  &trans    &trans    &trans   &trans    &kp PG_DN
                           &trans  &trans  &trans  &trans    &trans    &trans
            >;
        };

        META {
            display-name = "Meta";
            bindings = <
&mt ESC Q  &kp W  &kp E  &kp R   &kp T    &kp Y     &kp U  &kp I      &kp O      &kp P
&kp A      &kp S  &kp D  &kp F   &kp G    &kp H     &kp J  &kp K      &kp L      &trans
&mt TAB Z  &kp X  &kp C  &kp V   &kp B    &kp N     &kp M  &kp DOT    &trans     &trans
                  &trans &trans  &trans   &trans    &trans &trans  
            >;
        };

        FUTURE {
            display-name = "Future";
            bindings = <
&mt ESC Q &kp W &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I   &kp O  &kp P
&kp A     &kp S &kp D  &kp F  &kp G  &kp H  &kp J  &kp K   &kp L  &trans
&mt TAB Z &kp X &kp C  &kp V  &kp B  &kp N  &kp M  &kp DOT &trans &trans
                &trans &trans &trans &trans &trans &trans
            >;
        };
};
};
